/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package net.thetechstack

import org.jsoup.Jsoup
import org.jsoup.nodes.Element

class Movie() {
    var title: String? = ""
    var directedBy: String = ""
    var producedBy: String = ""
    var writtenBy: String = ""
    var starring: String = ""
    var musicBy: String = ""
    var releaseDate: String = ""
    var posterURL: String = ""

    override fun toString(): String {
        return "Movie(title='$title',\n directedBy='$directedBy', producedBy='$producedBy',\n writtenBy='$writtenBy', starring='$starring',\n musicBy='$musicBy', releaseDate='$releaseDate,\n , posterURL='$posterURL')"
    }

}

val wiki = "https://en.wikipedia.org"

fun main() {
    val movies = mutableListOf<String>()
    //val doc = Jsoup.connect("$wiki/wiki/List_of_films_with_a_100%25_rating_on_Rotten_Tomatoes").get()
    //val movies = doc.select(".wikitable:first-of-type tr td:first-of-type a")
      //      .map { col -> col.attr("href") }
        //    .toList()

    //movies.add(Movie("/wiki/The_Cabinet_of_Dr._Caligari","The Cabinet of Dr. Caligari"))
    movies.add("/wiki/The_Kid_(1921_film)")
    /*movies.add(Movie("/wiki/Nanook_of_the_North","Nanook of the North"))
    movies.add(Movie("/wiki/Greed_(film)","Greed"))
    movies.add(Movie("/wiki/The_Last_Laugh_(1924_film)","The Last Laugh"))
    movies.add(Movie("/wiki/Battleship_Potemkin","Battleship Potemkin"))
    movies.add(Movie("/wiki/The_Gold_Rush","The Gold Rush"))
    movies.add(Movie("/wiki/Steamboat_Bill,_Jr.","Steamboat Bill, Jr."))
    movies.add(Movie("/wiki/Un_Chien_Andalou","Un Chien Andalou"))
    movies.add(Movie("/wiki/All_Quiet_on_the_Western_Front_(1930_film)","All Quiet on the Western Front"))
*/
    val startTime = System.currentTimeMillis()
    //movies.forEach { println(it) }
    movies.stream()
            .map { extractMovieData(it) }
            .forEach { println(it) }

    println("${(System.currentTimeMillis() - startTime) / 1000} seconds")
}

fun extractMovieData(url: String): Movie {
    val movie = Movie()
    Jsoup.connect("$wiki$url").get()
            .select(".infobox tr")
            .forEach { ele ->
                when {
                    ele.getElementsByTag("th")?.hasClass("summary") ?: false -> {
                        movie.title = ele.getElementsByTag("th")?.text()
                    }
                    ele.getElementsByTag("img").isNotEmpty() -> {
                        movie.posterURL = "https:" + ele.getElementsByTag("img").attr("src")
                    }
                    else -> {
                        val value: String? = if (ele.getElementsByTag("li").size > 1)
                            ele.getElementsByTag("li").map(Element::text).filter(String::isNotEmpty).joinToString(", ") else
                            ele.getElementsByTag("td")?.first()?.text()
                        when (ele.getElementsByTag("th")?.first()?.text()) {
                            "Directed by" -> movie.directedBy = value ?: ""
                            "Produced by" -> movie.producedBy = value ?: ""
                            "Written by" -> movie.writtenBy = value ?: ""
                            "Starring" -> movie.starring = value ?: ""
                            "Music by" -> movie.musicBy = value ?: ""
                            "Release date" -> movie.releaseDate = value ?: ""
                            "poster URL" -> movie.posterURL = value ?: ""
                            "title" -> movie.title = value ?:""
                        }
                    }
                }
            }
    return movie
}
